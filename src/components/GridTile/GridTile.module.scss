$tile-blank: white;
$tile-blank-dark: black;
$tile-filled: gray;
$tile-filled-dark: rgb(75, 75, 75);
$tile-notpresent: rgb(53, 53, 53);
$tile-notpresent-dark: black;
$tile-present: #f1d453;
$tile-present-dark: #b59f3b;
$tile-correct: #6fb968;
$tile-correct-dark: #538d4e;

$flip-time: 0.5s;
$pulse-time: 0.1s;
$delay-modifier: 0.2s;

// Pulse animation used when tiles filled with letter
@keyframes pulse {
	0% {
		transform: scale(1, 1);
	}
	50% {
		transform: scale(1.1, 1.1);
	}
	100% {
		transform: scale(1, 1);
	}
}

// generates all the delay classes with appropriate
// transition delays based on tile column number
@for $i from 0 through 9 {
	.Delay#{$i} {
		transition: all $flip-time linear $i * $delay-modifier,
			background-color 0s $i * $delay-modifier + 0.5 * $flip-time;
	}
}

.Light,
.Dark {
	display: flex;
	justify-content: center;
	align-items: center;

	border: 2px solid gray;

	min-width: 7vh;
	min-height: 7vh;
	width: 12vw;
	height: 12vw;
	max-width: 10vh;
	max-height: 10vh;
	&__Default {
		@extend .Light;
		background-color: $tile-blank;
		transition: all $flip-time linear, background-color 0s;
	}
	&__Filled {
		@extend .Light__Default;
		background-color: $tile-filled;
		animation: pulse $pulse-time linear;
	}
	&__NotPresent {
		@extend .Light;
		background-color: $tile-notpresent;
		transform: scaleY(-1);
		-webkit-transform: scaleY(-1);
	}
	&__Present {
		@extend .Light__NotPresent;
		background-color: $tile-present;
	}
	&__Correct {
		@extend .Light__NotPresent;
		background-color: $tile-correct;
	}
}

.Dark {
	&__Default {
		background-color: $tile-blank-dark;
	}
	&__Filled {
		background-color: $tile-filled-dark;
	}
	&__NotPresent {
		background-color: $tile-notpresent-dark;
	}
	&__Present {
		background-color: $tile-present-dark;
	}
	&__Correct {
		background-color: $tile-correct-dark;
	}
}

.Letter {
	color: white;
	font-size: xx-large;
	font-weight: bolder;
	transition: all 0s (0.5 * $flip-time);
	&__Flipped {
		@extend .Letter;
		transform: scaleY(-1);
		-webkit-transform: scaleY(-1);
	}
	@for $i from 0 through 9 {
		&_Delay#{$i} {
			transition-delay: ($delay-modifier * $i) + (0.5 * $flip-time);
		}
	}
}
